// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  email       String            @unique
  username    String?           @unique
  password    String?
  phone       String?
  address     String?
  createdAt   DateTime          @default(now())
  // posts       Post[]
  savedPosts  SavedPost[]
}

model Post {
  id                  String            @id @default(auto()) @map("_id") @db.ObjectId
  estateType          String

  area                Int?
  price               Int?
  priceUnit           String?
  frontageArea        Int?
  entranceArea        Int?
  estateDirection     String?
  balconyDirection    String?
  floor               Int?
  bedroom             Int?
  toilet              Int?
  legal               String?
  furniture           String?
  postDate            DateTime?
  expireDate          DateTime?
  type                String?
  postCode            Int?
  address             String?
  latitude            Float?
  longitude           Float?
  ownerPhone          String?
  images              String?
  ownerEmail          String?
  url                 String?

  // user                User?              @relation(fields: [userId], references: [id])
  // userId              String            @db.ObjectId

  savedPosts  SavedPost[]
}

enum EstateType {
  buy
  rent
}

enum PostType {
  basic
  silver
  gold
  diamond
}

enum Direction {
  North
  South
  West
  East
  EastNorth
  EastSouth
  WestNorth
  WestSouth
}

model SavedPost {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  user        User              @relation(fields: [userId], references: [id])
  post        Post              @relation(fields: [postId], references: [id])
  userId      String            @unique @db.ObjectId
  postId      String            @unique @db.ObjectId
  createdAt   DateTime          @default(now())

  @@unique([userId, postId])
}